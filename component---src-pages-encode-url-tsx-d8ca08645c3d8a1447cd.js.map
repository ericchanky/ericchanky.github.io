{"version":3,"sources":["webpack:///./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack:///./node_modules/@material-ui/core/esm/Button/Button.js","webpack:///./src/pages/encodeURL.tsx"],"names":["forwardRef","props","ref","_props$disableSpacing","disableSpacing","classes","className","other","createElement","root","spacing","withStyles","display","alignItems","padding","marginLeft","name","children","_props$color","color","_props$component","component","_props$disabled","disabled","_props$disableElevati","disableElevation","_props$disableFocusRi","disableFocusRipple","endIconProp","endIcon","focusVisibleClassName","_props$fullWidth","fullWidth","_props$size","size","startIconProp","startIcon","_props$type","type","_props$variant","variant","concat","capitalize","ButtonBase","colorInherit","focusRipple","focusVisible","label","theme","typography","button","boxSizing","minWidth","borderRadius","shape","palette","text","primary","transition","transitions","create","duration","textDecoration","backgroundColor","action","hoverOpacity","width","justifyContent","textPrimary","main","textSecondary","secondary","outlined","border","outlinedPrimary","outlinedSecondary","contained","getContrastText","grey","boxShadow","shadows","A100","disabledBackground","containedPrimary","contrastText","dark","containedSecondary","borderColor","textSizeSmall","fontSize","pxToRem","textSizeLarge","outlinedSizeSmall","outlinedSizeLarge","containedSizeSmall","containedSizeLarge","sizeSmall","sizeLarge","marginRight","iconSizeSmall","iconSizeMedium","iconSizeLarge","EncodeURL","React","useState","url","setURL","onEncode","useCallback","window","test","encodeURI","encodeURIComponent","onDecode","decodeURI","decodeURIComponent","Layout","title","TextField","multiline","rows","value","onChange","evt","target","onClick"],"mappings":"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","file":"component---src-pages-encode-url-tsx-d8ca08645c3d8a1447cd.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? CardActions.propTypes = {\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * If `true`, the actions do not have additional margin.\n   */\n  disableSpacing: PropTypes.bool\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport { fade } from '../styles/colorManipulator';\nimport ButtonBase from '../ButtonBase';\nimport capitalize from '../utils/capitalize';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: _extends({}, theme.typography.button, {\n      boxSizing: 'border-box',\n      minWidth: 64,\n      padding: '6px 16px',\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.text.primary,\n      transition: theme.transitions.create(['background-color', 'box-shadow', 'border'], {\n        duration: theme.transitions.duration[\"short\"]\n      }),\n      '&:hover': {\n        textDecoration: 'none',\n        backgroundColor: fade(theme.palette.text.primary, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        },\n        '&$disabled': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled\n      }\n    }),\n\n    /* Styles applied to the span element that wraps the children. */\n    label: {\n      width: '100%',\n      // Ensure the correct width for iOS Safari\n      display: 'inherit',\n      alignItems: 'inherit',\n      justifyContent: 'inherit'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      padding: '6px 8px'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"primary\"`. */\n    textPrimary: {\n      color: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"` and `color=\"secondary\"`. */\n    textSecondary: {\n      color: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"`. */\n    outlined: {\n      padding: '5px 15px',\n      border: \"1px solid \".concat(theme.palette.type === 'light' ? 'rgba(0, 0, 0, 0.23)' : 'rgba(255, 255, 255, 0.23)'),\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"primary\"`. */\n    outlinedPrimary: {\n      color: theme.palette.primary.main,\n      border: \"1px solid \".concat(fade(theme.palette.primary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.primary.main),\n        backgroundColor: fade(theme.palette.primary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"outlined\"` and `color=\"secondary\"`. */\n    outlinedSecondary: {\n      color: theme.palette.secondary.main,\n      border: \"1px solid \".concat(fade(theme.palette.secondary.main, 0.5)),\n      '&:hover': {\n        border: \"1px solid \".concat(theme.palette.secondary.main),\n        backgroundColor: fade(theme.palette.secondary.main, theme.palette.action.hoverOpacity),\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: 'transparent'\n        }\n      },\n      '&$disabled': {\n        border: \"1px solid \".concat(theme.palette.action.disabled)\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"`. */\n    contained: {\n      color: theme.palette.getContrastText(theme.palette.grey[300]),\n      backgroundColor: theme.palette.grey[300],\n      boxShadow: theme.shadows[2],\n      '&:hover': {\n        backgroundColor: theme.palette.grey.A100,\n        boxShadow: theme.shadows[4],\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          boxShadow: theme.shadows[2],\n          backgroundColor: theme.palette.grey[300]\n        },\n        '&$disabled': {\n          backgroundColor: theme.palette.action.disabledBackground\n        }\n      },\n      '&$focusVisible': {\n        boxShadow: theme.shadows[6]\n      },\n      '&:active': {\n        boxShadow: theme.shadows[8]\n      },\n      '&$disabled': {\n        color: theme.palette.action.disabled,\n        boxShadow: theme.shadows[0],\n        backgroundColor: theme.palette.action.disabledBackground\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"primary\"`. */\n    containedPrimary: {\n      color: theme.palette.primary.contrastText,\n      backgroundColor: theme.palette.primary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.primary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.primary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"contained\"` and `color=\"secondary\"`. */\n    containedSecondary: {\n      color: theme.palette.secondary.contrastText,\n      backgroundColor: theme.palette.secondary.main,\n      '&:hover': {\n        backgroundColor: theme.palette.secondary.dark,\n        // Reset on touch devices, it doesn't add specificity\n        '@media (hover: none)': {\n          backgroundColor: theme.palette.secondary.main\n        }\n      }\n    },\n\n    /* Styles applied to the root element if `disableElevation={true}`. */\n    disableElevation: {\n      boxShadow: 'none',\n      '&:hover': {\n        boxShadow: 'none'\n      },\n      '&$focusVisible': {\n        boxShadow: 'none'\n      },\n      '&:active': {\n        boxShadow: 'none'\n      },\n      '&$disabled': {\n        boxShadow: 'none'\n      }\n    },\n\n    /* Pseudo-class applied to the ButtonBase root element if the button is keyboard focused. */\n    focusVisible: {},\n\n    /* Pseudo-class applied to the root element if `disabled={true}`. */\n    disabled: {},\n\n    /* Styles applied to the root element if `color=\"inherit\"`. */\n    colorInherit: {\n      color: 'inherit',\n      borderColor: 'currentColor'\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"text\"`. */\n    textSizeSmall: {\n      padding: '4px 5px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"text\"`. */\n    textSizeLarge: {\n      padding: '8px 11px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"outlined\"`. */\n    outlinedSizeSmall: {\n      padding: '3px 9px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"outlined\"`. */\n    outlinedSizeLarge: {\n      padding: '7px 21px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"` and `variant=\"contained\"`. */\n    containedSizeSmall: {\n      padding: '4px 10px',\n      fontSize: theme.typography.pxToRem(13)\n    },\n\n    /* Styles applied to the root element if `size=\"large\"` and `variant=\"contained\"`. */\n    containedSizeLarge: {\n      padding: '8px 22px',\n      fontSize: theme.typography.pxToRem(15)\n    },\n\n    /* Styles applied to the root element if `size=\"small\"`. */\n    sizeSmall: {},\n\n    /* Styles applied to the root element if `size=\"large\"`. */\n    sizeLarge: {},\n\n    /* Styles applied to the root element if `fullWidth={true}`. */\n    fullWidth: {\n      width: '100%'\n    },\n\n    /* Styles applied to the startIcon element if supplied. */\n    startIcon: {\n      display: 'inherit',\n      marginRight: 8,\n      marginLeft: -4,\n      '&$iconSizeSmall': {\n        marginLeft: -2\n      }\n    },\n\n    /* Styles applied to the endIcon element if supplied. */\n    endIcon: {\n      display: 'inherit',\n      marginRight: -4,\n      marginLeft: 8,\n      '&$iconSizeSmall': {\n        marginRight: -2\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"small\"`. */\n    iconSizeSmall: {\n      '& > *:first-child': {\n        fontSize: 18\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"medium\"`. */\n    iconSizeMedium: {\n      '& > *:first-child': {\n        fontSize: 20\n      }\n    },\n\n    /* Styles applied to the icon element if supplied and `size=\"large\"`. */\n    iconSizeLarge: {\n      '& > *:first-child': {\n        fontSize: 22\n      }\n    }\n  };\n};\nvar Button = React.forwardRef(function Button(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'default' : _props$color,\n      _props$component = props.component,\n      component = _props$component === void 0 ? 'button' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$disableElevati = props.disableElevation,\n      disableElevation = _props$disableElevati === void 0 ? false : _props$disableElevati,\n      _props$disableFocusRi = props.disableFocusRipple,\n      disableFocusRipple = _props$disableFocusRi === void 0 ? false : _props$disableFocusRi,\n      endIconProp = props.endIcon,\n      focusVisibleClassName = props.focusVisibleClassName,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 'medium' : _props$size,\n      startIconProp = props.startIcon,\n      _props$type = props.type,\n      type = _props$type === void 0 ? 'button' : _props$type,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"disableElevation\", \"disableFocusRipple\", \"endIcon\", \"focusVisibleClassName\", \"fullWidth\", \"size\", \"startIcon\", \"type\", \"variant\"]);\n\n  var startIcon = startIconProp && React.createElement(\"span\", {\n    className: clsx(classes.startIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, startIconProp);\n  var endIcon = endIconProp && React.createElement(\"span\", {\n    className: clsx(classes.endIcon, classes[\"iconSize\".concat(capitalize(size))])\n  }, endIconProp);\n  return React.createElement(ButtonBase, _extends({\n    className: clsx(classes.root, classes[variant], className, color === 'inherit' ? classes.colorInherit : color !== 'default' && classes[\"\".concat(variant).concat(capitalize(color))], size !== 'medium' && [classes[\"\".concat(variant, \"Size\").concat(capitalize(size))], classes[\"size\".concat(capitalize(size))]], disableElevation && classes.disableElevation, disabled && classes.disabled, fullWidth && classes.fullWidth),\n    component: component,\n    disabled: disabled,\n    focusRipple: !disableFocusRipple,\n    focusVisibleClassName: clsx(classes.focusVisible, focusVisibleClassName),\n    ref: ref,\n    type: type\n  }, other), React.createElement(\"span\", {\n    className: classes.label\n  }, startIcon, children, endIcon));\n});\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /**\n   * The content of the button.\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['default', 'inherit', 'primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a DOM element or a component.\n   */\n  component: PropTypes.elementType,\n\n  /**\n   * If `true`, the button will be disabled.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, no elevation is used.\n   */\n  disableElevation: PropTypes.bool,\n\n  /**\n   * If `true`, the  keyboard focus ripple will be disabled.\n   * `disableRipple` must also be true.\n   */\n  disableFocusRipple: PropTypes.bool,\n\n  /**\n   * If `true`, the ripple effect will be disabled.\n   *\n   * ⚠️ Without a ripple there is no styling for :focus-visible by default. Be sure\n   * to highlight the element by applying separate styles with the `focusVisibleClassName`.\n   */\n  disableRipple: PropTypes.bool,\n\n  /**\n   * Element placed after the children.\n   */\n  endIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  focusVisibleClassName: PropTypes.string,\n\n  /**\n   * If `true`, the button will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * The URL to link to when the button is clicked.\n   * If defined, an `a` element will be used as the root node.\n   */\n  href: PropTypes.string,\n\n  /**\n   * The size of the button.\n   * `small` is equivalent to the dense button styling.\n   */\n  size: PropTypes.oneOf(['small', 'medium', 'large']),\n\n  /**\n   * Element placed before the children.\n   */\n  startIcon: PropTypes.node,\n\n  /**\n   * @ignore\n   */\n  type: PropTypes.string,\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['text', 'outlined', 'contained'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiButton'\n})(Button);","import { Button, CardActions, TextField } from '@material-ui/core'\nimport React from 'react'\n\nimport Layout from '../components/Layout'\n\nconst EncodeURL = () => {\n  const [url, setURL] = React.useState('')\n\n  const onEncode = React.useCallback(() => {\n    if (typeof window === 'undefined') { return }\n\n    if (/^https?/.test(url)) {\n      setURL(encodeURI(url))\n    } else {\n      setURL(encodeURIComponent(url))\n    }\n  }, [url])\n\n  const onDecode = React.useCallback(() => {\n    if (typeof window === 'undefined') { return }\n    \n    if (/^https?/.test(url)) {\n      setURL(decodeURI(url))\n    } else {\n      setURL(decodeURIComponent(url))\n    }\n  }, [url])\n\n  return (\n    <Layout title=\"Encode / Decode URL\">\n      <TextField\n        fullWidth\n        multiline\n        rows={5}\n        variant=\"outlined\"\n        value={url}\n        onChange={(evt) => setURL(evt.target.value)}\n      />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={onEncode}\n        >\n          Encode\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={onDecode}\n        >\n          Decode\n        </Button>\n      </CardActions>\n    </Layout>\n  )\n}\n\nexport default EncodeURL\n"],"sourceRoot":""}