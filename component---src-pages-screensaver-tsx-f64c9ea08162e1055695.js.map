{"version":3,"sources":["webpack:///./node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","webpack:///./node_modules/core-js/modules/es7.promise.finally.js","webpack:///./node_modules/date-fns/esm/isValid/index.js","webpack:///./src/pages/screensaver.tsx","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","webpack:///./node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","webpack:///./node_modules/date-fns/esm/locale/en-US/index.js","webpack:///./node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","webpack:///./node_modules/date-fns/esm/subMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/formatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","webpack:///./node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","webpack:///./node_modules/date-fns/esm/_lib/format/longFormatters/index.js","webpack:///./node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","webpack:///./node_modules/date-fns/esm/_lib/protectedTokens/index.js","webpack:///./node_modules/date-fns/esm/format/index.js"],"names":["addLeadingZeros","number","targetLength","sign","output","Math","abs","toString","length","$export","core","global","speciesConstructor","promiseResolve","P","R","onFinally","C","this","Promise","isFunction","then","x","e","isValid","dirtyDate","arguments","date","isNaN","useStyles","makeStyles","theme","main","position","width","height","color","phraseContainer","top","transform","textAlign","margin","phrasePrimary","fontSize","phraseSecondary","marginTop","time","bottom","spacing","timeFont","fontFamily","source","encodeURIComponent","withLayout","observer","phrase","React","useContext","storeContext","useState","Date","now","setNow","raw","config","setConfig","fetch","useCallback","a","isBefore","nextUpdate","axios","get","res","csv","headers","delimiter","fromString","data","set","list","addHours","nextPhrase","useEffect","interval","setInterval","clearInterval","qs","parse","location","search","substring","auto","c","className","item","author","variant","format","disableHeader","title","formatDistanceLocale","lessThanXSeconds","one","other","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","args","dirtyOptions","options","String","defaultWidth","formats","full","medium","dateTime","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","values","argumentCallback","ordinalNumber","dirtyNumber","_dirtyOptions","Number","rem100","era","narrow","abbreviated","wide","quarter","month","day","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchResult","match","value","matchedString","parsePatterns","defaultParseWidth","Object","prototype","call","array","predicate","key","findIndex","pattern","test","object","hasOwnProperty","findKey","valueCallback","rest","slice","locale","code","formatDistance","token","count","result","replace","addSuffix","comparison","formatLong","formatRelative","_date","_baseDate","_options","localize","parsePattern","parseInt","parseResult","any","index","weekStartsOn","firstWeekContainsDate","easeOut","t","min","max","CircularProgress","props","ref","classes","_props$color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","_props$variant","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","root","indeterminate","role","svg","viewBox","SIZE","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","display","transition","transitions","create","animation","colorPrimary","palette","primary","colorSecondary","secondary","stroke","name","flip","subMilliseconds","dirtyAmount","requiredArgs","amount","toInteger","addMilliseconds","y","signedYear","getUTCFullYear","year","M","getUTCMonth","d","getUTCDate","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","s","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","fractionalSeconds","floor","pow","startOfUTCISOWeek","toDate","getUTCDay","diff","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","getTime","startOfUTCISOWeekYear","fourthOfJanuary","startOfUTCWeek","localeWeekStartsOn","defaultWeekStartsOn","RangeError","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","startOfUTCWeekYear","firstWeek","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","formatTimezoneWithOptionalMinutes","formatTimezone","G","unit","lightFormatters","Y","signedWeekYear","weekYear","twoDigitYear","isoWeekYear","u","Q","ceil","q","L","w","week","getUTCWeek","I","isoWeek","getUTCISOWeek","D","dayOfYear","timestamp","setUTCMonth","startOfYearTimestamp","difference","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","i","isoDayOfWeek","b","B","K","k","X","_localize","timezoneOffset","_originalDate","getTimezoneOffset","O","z","originalDate","T","dateLongFormatter","timeLongFormatter","p","dateTimeFormat","datePattern","timePattern","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","setSeconds","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","indexOf","isProtectedWeekYearToken","throwProtectedError","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","dirtyFormatStr","formatStr","utcDate","formatterOptions","map","firstCharacter","longFormatter","join","cleanEscapedString","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","input"],"mappings":"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","file":"component---src-pages-screensaver-tsx-f64c9ea08162e1055695.js","sourcesContent":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","// https://github.com/tc39/proposal-promise-finally\n'use strict';\nvar $export = require('./_export');\nvar core = require('./_core');\nvar global = require('./_global');\nvar speciesConstructor = require('./_species-constructor');\nvar promiseResolve = require('./_promise-resolve');\n\n$export($export.P + $export.R, 'Promise', { 'finally': function (onFinally) {\n  var C = speciesConstructor(this, core.Promise || global.Promise);\n  var isFunction = typeof onFinally == 'function';\n  return this.then(\n    isFunction ? function (x) {\n      return promiseResolve(C, onFinally()).then(function () { return x; });\n    } : onFinally,\n    isFunction ? function (e) {\n      return promiseResolve(C, onFinally()).then(function () { throw e; });\n    } : onFinally\n  );\n} });\n","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","import { Box, CircularProgress, makeStyles, Typography } from '@material-ui/core'\nimport axios from 'axios'\nimport csv from 'csvtojson'\nimport { format, isBefore } from 'date-fns'\nimport { addHours } from 'date-fns/esm'\nimport { observer } from 'mobx-react'\nimport qs from 'qs'\nimport React from 'react'\n\nimport { withLayout } from '../components/Layout'\nimport { storeContext } from '../store'\n\nconst useStyles = makeStyles((theme) => ({\n  main: {\n    position: 'relative',\n    width: '100vw',\n    height: '100vh',\n    color: 'white',\n  },\n  phraseContainer: {\n    position: 'relative',\n    top: '50%',\n    transform: 'translateY(-60%)',\n    textAlign: 'center',\n    margin: '0 8rem',\n  },\n  phrasePrimary: {\n    fontSize: '2.5rem',\n  },\n  phraseSecondary: {\n    marginTop: '2rem',\n    textAlign: 'right',\n  },\n  time: {\n    position: 'absolute',\n    bottom: theme.spacing(2),\n    width: '100%',\n    textAlign: 'center',\n  },\n  timeFont: {\n    fontFamily: 'Fira Mono',\n  },\n}))\n\nconst source = `https://dzway.herokuapp.com/proxy?src=${encodeURIComponent('https://docs.google.com/spreadsheets/d/e/2PACX-1vTfSMdib9NVMRR0UxeFCg9jM_nLKxFpGwur-NjjdNQlpqZXerymjiNzQm_1Nu9P3bvnc-WzN51n4o8B/pub?gid=0&single=true&output=tsv')}`\n\nconst Phrase = () => {\n  const { main, phrasePrimary, phraseSecondary, phraseContainer, time, timeFont } = useStyles()\n  const { phrase } = React.useContext(storeContext)\n\n  const [now, setNow] = React.useState(new Date)\n  const [config, setConfig] = React.useState({ raw: false })\n\n  const fetch = React.useCallback(async () => {\n    if (isBefore(new Date, phrase.nextUpdate)) { return }\n\n    const res = await axios.get(source)\n    csv({ headers: ['phrase', 'author'], delimiter: '\\t' })\n      .fromString(res.data)\n      .then((data) => {\n        phrase.set({\n          list: data as unknown as typeof phrase['list'], nextUpdate: addHours(new Date, 6),\n          nextPhrase: new Date,\n        })\n      })\n  }, [phrase])\n\n  React.useEffect(() => {\n    fetch()\n  }, [fetch])\n\n  React.useEffect(() => {\n    const interval = setInterval(() => setNow(new Date), 1000)\n    return () => clearInterval(interval)\n  }, [])\n\n  React.useEffect(() => {\n    // toggle auto mode\n    const query = qs.parse(location.search.substring(1))\n    if (query.auto) {\n      setConfig((c) => ({ ...c, raw: true }))\n    }\n  }, [])\n\n  return (\n    <Box className={main}>\n      <Box className={phraseContainer}>\n        {!phrase.item && <CircularProgress color=\"primary\" />}\n        <Typography className={phrasePrimary}>{phrase.item && phrase.item.phrase}</Typography>\n        {phrase.item && phrase.item.author && (\n          <Typography className={phraseSecondary}>— {phrase.item.author}</Typography>\n        )}\n      </Box>\n      {!config.raw && (\n        <Box className={time}>\n          <Typography variant=\"h5\" className={timeFont}>{format(now, 'yyyy-MM-dd HH:mm:ss')}</Typography>\n        </Box>\n      )}\n    </Box>\n  )\n}\n\nexport default withLayout(observer(Phrase), {\n  disableHeader: true,\n  title: 'Phrase',\n  theme: 'dark',\n})\n","import \"core-js/modules/es6.regexp.replace\";\nvar formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  \"long\": 'MMMM do, y',\n  medium: 'MMM d, y',\n  \"short\": 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  \"long\": 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  \"short\": 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  \"long\": \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  \"short\": '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.object.to-string\";\nexport default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","import \"core-js/modules/es6.number.constructor\";\nimport buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  \"short\": ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.date.to-string\";\nimport \"core-js/modules/es6.object.to-string\";\nimport \"core-js/modules/es6.regexp.match\";\nexport default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(string);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  \"short\": /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","import \"core-js/modules/es6.regexp.match\";\nexport default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    \"static\": {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes[\"static\"]\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, {}, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? CircularProgress.propTypes = {\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary', 'inherit']),\n\n  /**\n   * If `true`, the shrink animation is disabled.\n   * This only works if variant is `indeterminate`.\n   */\n  disableShrink: chainPropTypes(PropTypes.bool, function (props) {\n    if (props.disableShrink && props.variant && props.variant !== 'indeterminate') {\n      return new Error('Material-UI: you have provided the `disableShrink` prop ' + 'with a variant other than `indeterminate`. This will have no effect.');\n    }\n\n    return null;\n  }),\n\n  /**\n   * The size of the circle.\n   * If using a number, the pixel unit is assumed.\n   * If using a string, you need to provide the CSS unit, e.g '3rem'.\n   */\n  size: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n\n  /**\n   * The thickness of the circle.\n   */\n  thickness: PropTypes.number,\n\n  /**\n   * The value of the progress indicator for the determinate and static variants.\n   * Value between 0 and 100.\n   */\n  value: PropTypes.number,\n\n  /**\n   * The variant to use.\n   * Use indeterminate when there is no progress value.\n   */\n  variant: PropTypes.oneOf(['determinate', 'indeterminate', 'static'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\n\nfunction dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import \"core-js/modules/es6.array.index-of\";\nvar protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token) {\n  if (token === 'YYYY') {\n    throw new RangeError('Use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'YY') {\n    throw new RangeError('Use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr');\n  } else if (token === 'D') {\n    throw new RangeError('Use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr');\n  } else if (token === 'DD') {\n    throw new RangeError('Use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr');\n  }\n}","import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\nimport \"core-js/modules/es6.array.map\";\nimport isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Su            | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Su            |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 1, 2, ..., 11, 0                  |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}"],"sourceRoot":""}