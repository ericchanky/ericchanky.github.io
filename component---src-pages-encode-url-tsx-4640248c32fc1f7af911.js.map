{"version":3,"sources":["webpack://tools/./node_modules/@material-ui/core/esm/CardActions/CardActions.js","webpack://tools/./src/pages/encodeURL.tsx"],"names":["CardActions","props","ref","_props$disableSpacing","disableSpacing","classes","className","other","root","spacing","display","alignItems","padding","marginLeft","name","withLayout","React","url","setURL","onEncode","window","test","encodeURI","encodeURIComponent","onDecode","decodeURI","decodeURIComponent","fullWidth","multiline","rows","variant","value","onChange","evt","target","color","onClick","title"],"mappings":"+JAoBIA,EAAc,cAAiB,SAAqBC,EAAOC,GAC7D,IAAIC,EAAwBF,EAAMG,eAC9BA,OAA2C,IAA1BD,GAA2CA,EAC5DE,EAAUJ,EAAMI,QAChBC,EAAYL,EAAMK,UAClBC,GAAQ,OAAyBN,EAAO,CAAC,iBAAkB,UAAW,cAE1E,OAAoB,gBAAoB,OAAO,OAAS,CACtDK,WAAW,OAAKD,EAAQG,KAAMF,GAAYF,GAAkBC,EAAQI,SACpEP,IAAKA,GACJK,OAGL,KAAe,OA5BK,CAElBC,KAAM,CACJE,QAAS,OACTC,WAAY,SACZC,QAAS,GAIXH,QAAS,CACP,yBAA0B,CACxBI,WAAY,KAiBgB,CAChCC,KAAM,kBADR,CAEGd,I,qGCuBH,WAAee,QArDG,WAAM,MACAC,WAAe,IAA9BC,EADe,KACVC,EADU,KAGhBC,EAAWH,eAAkB,WACX,oBAAXI,SAEP,UAAUC,KAAKJ,GACjBC,EAAOI,UAAUL,IAEjBC,EAAOK,mBAAmBN,OAE3B,CAACA,IAEEO,EAAWR,eAAkB,WACX,oBAAXI,SAEP,UAAUC,KAAKJ,GACjBC,EAAOO,UAAUR,IAEjBC,EAAOQ,mBAAmBT,OAE3B,CAACA,IAEJ,OACE,gCACE,gBAAC,IAAD,CACEU,WAAS,EACTC,WAAS,EACTC,KAAM,EACNC,QAAQ,WACRC,MAAOd,EACPe,SAAU,SAACC,GAAD,OAASf,EAAOe,EAAIC,OAAOH,UAEvC,gBAAC,IAAD,KACE,gBAAC,IAAD,CACEI,MAAM,UACNL,QAAQ,YACRM,QAASjB,GAHX,UAOA,gBAAC,IAAD,CACEgB,MAAM,YACNL,QAAQ,YACRM,QAASZ,GAHX,cAY6B,CACnCa,MAAO","file":"component---src-pages-encode-url-tsx-4640248c32fc1f7af911.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: 8\n  },\n\n  /* Styles applied to the root element if `disableSpacing={false}`. */\n  spacing: {\n    '& > :not(:first-child)': {\n      marginLeft: 8\n    }\n  }\n};\nvar CardActions = React.forwardRef(function CardActions(props, ref) {\n  var _props$disableSpacing = props.disableSpacing,\n      disableSpacing = _props$disableSpacing === void 0 ? false : _props$disableSpacing,\n      classes = props.classes,\n      className = props.className,\n      other = _objectWithoutProperties(props, [\"disableSpacing\", \"classes\", \"className\"]);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, !disableSpacing && classes.spacing),\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCardActions'\n})(CardActions);","import { Button, CardActions, TextField } from '@material-ui/core'\nimport React from 'react'\n\nimport { withLayout } from '../components/Layout/withLayout'\n\nconst EncodeURL = () => {\n  const [url, setURL] = React.useState('')\n\n  const onEncode = React.useCallback(() => {\n    if (typeof window === 'undefined') { return }\n\n    if (/^https?/.test(url)) {\n      setURL(encodeURI(url))\n    } else {\n      setURL(encodeURIComponent(url))\n    }\n  }, [url])\n\n  const onDecode = React.useCallback(() => {\n    if (typeof window === 'undefined') { return }\n\n    if (/^https?/.test(url)) {\n      setURL(decodeURI(url))\n    } else {\n      setURL(decodeURIComponent(url))\n    }\n  }, [url])\n\n  return (\n    <>\n      <TextField\n        fullWidth\n        multiline\n        rows={5}\n        variant=\"outlined\"\n        value={url}\n        onChange={(evt) => setURL(evt.target.value)}\n      />\n      <CardActions>\n        <Button\n          color=\"primary\"\n          variant=\"contained\"\n          onClick={onEncode}\n        >\n          Encode\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          onClick={onDecode}\n        >\n          Decode\n        </Button>\n      </CardActions>\n    </>\n  )\n}\n\nexport default withLayout(EncodeURL, {\n  title: 'Encode / Decode URL',\n})\n"],"sourceRoot":""}