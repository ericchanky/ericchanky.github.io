{"version":3,"sources":["webpack:///./src/utils/tokenize.ts","webpack:///./src/pages/secretpass.tsx","webpack:///./src/components/Layout/Page.tsx"],"names":["salt","tokenize","p","s","split","map","w","charCodeAt","join","f","pick","n","r","Math","floor","length","Number","i","slice","useStyles","makeStyles","fullHeihgt","height","center","textAlign","withLayout","classes","useState","password","setPasssword","ref","useRef","token","useMemo","Page","Grid","container","spacing","alignContent","className","item","xs","Typography","variant","TextField","fullWidth","size","type","value","onChange","evt","target","aria-readonly","inputRef","Button","onClick","current","select","document","execCommand","title","disableHeader","theme","maxWidth","margin","width","children"],"mappings":"gNAAMA,G,oBAAO,6DAWAC,EAAW,SAACC,GACvB,IAAMC,EAAID,EAAEE,MAAM,IAAIC,KAAI,SAACC,GACzB,OAAOA,EAAEC,WAAW,MACnBC,KAAK,IAEFC,EAdK,SAAPC,EAAQC,GACZ,IAAMC,EAAIC,KAAKC,MAAMH,EAAIX,EAAKe,QAC9B,OAAU,IAANH,EACKZ,EAAKW,EAAIX,EAAKe,QAGvB,GAAUf,EAAKW,EAAIX,EAAKe,QAAUL,EAAKE,GAQ7BF,CAAKM,OAAOb,IAChBc,EAAIJ,KAAKC,MAAiB,KAAXL,EAAEM,QACvB,OAAON,EAAES,MAAM,EAAGD,GAAK,IAAMR,EAAES,MAAMD,ICXjCE,EAAYC,YAAW,CAC3BC,WAAY,CACVC,OAAQ,QAEVC,OAAQ,CACNC,UAAW,YAyDAC,uBArDI,WACjB,IAAMC,EAAUP,IADO,EAEUQ,mBAAS,IAAnCC,EAFgB,KAENC,EAFM,KAGjBC,EAAMC,iBAAyB,MAE/BC,EAAQC,mBAAQ,WACpB,OAAKL,EACE3B,EAAS2B,GADQ,KAEvB,CAACA,IAEJ,OACE,kBAACM,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,aAAa,SAASC,UAAWb,EAAQL,YACnE,kBAACc,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIF,UAAWb,EAAQH,QACpC,kBAACmB,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBAEF,kBAACR,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,kBAACG,EAAA,EAAD,CACEC,WAAS,EACTF,QAAQ,WACRG,KAAK,QACLC,KAAK,WACLC,MAAOpB,EACPqB,SAAU,SAACC,GAAD,OAASrB,EAAaqB,EAAIC,OAAOH,WAG/C,kBAACb,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,IACb,kBAACG,EAAA,EAAD,CACEC,WAAS,EACTO,iBAAA,EACAC,SAAUvB,EACVa,QAAQ,WACRG,KAAK,QACLE,MAAOhB,KAGX,kBAACG,EAAA,EAAD,CAAMK,MAAI,EAACC,GAAI,GAAIF,UAAWb,EAAQH,QACpC,kBAAC+B,EAAA,EAAD,CACEC,QAAS,WACFzB,EAAI0B,UACT1B,EAAI0B,QAAQC,SACZC,SAASC,YAAY,QACrB9B,EAAa,OALjB,aAgB4B,CACpC+B,MAAO,cACPC,eAAe,EACfC,MAAO,U,oCCxET,iDAGM3C,EAAYC,YAAW,CAC3BgB,UAAW,CACT2B,SAAU,IACVC,OAAQ,OACRC,MAAO,MACP3C,OAAQ,WAcGY,IAVF,SAAC,GAA8C,IAA5CgC,EAA4C,EAA5CA,SACRxC,EAAUP,IAEhB,OACE,kBAAC,IAAD,CAAKoB,UAAWb,EAAQU,WACrB8B","file":"component---src-pages-secretpass-tsx-a2df4d99c07735e45d96.js","sourcesContent":["const salt = 'ybfDNvPQJz5kTncAY2MWFs8ueiSw4BpLX6GqKx3h9trUZgVRdEC1am7H0'\n\nconst pick = (n: number): string => {\n  const r = Math.floor(n / salt.length)\n  if (r === 0) {\n    return salt[n % salt.length]\n  }\n\n  return `${salt[n % salt.length]}${pick(r)}`\n}\n\nexport const tokenize = (p: string) => {\n  const s = p.split('').map((w) => {\n    return w.charCodeAt(0)\n  }).join('')\n\n  const f = pick(Number(s))\n  const i = Math.floor(f.length * 0.618)\n  return f.slice(0, i) + '.' + f.slice(i)\n}\n","import { Button, Grid, makeStyles, TextField, Typography } from '@material-ui/core'\nimport React, { useMemo, useRef, useState } from 'react'\n\nimport Page from '../components/Layout/Page'\nimport { withLayout } from '../components/Layout/withLayout'\nimport { tokenize } from '../utils/tokenize'\n\nconst useStyles = makeStyles({\n  fullHeihgt: {\n    height: '100%',\n  },\n  center: {\n    textAlign: 'center',\n  },\n})\n\nconst SecretPass = () => {\n  const classes = useStyles()\n  const [password, setPasssword] = useState('')\n  const ref = useRef<HTMLInputElement>(null)\n\n  const token = useMemo(() => {\n    if (!password) { return '' }\n    return tokenize(password)\n  }, [password])\n\n  return (\n    <Page>\n      <Grid container spacing={2} alignContent=\"center\" className={classes.fullHeihgt}>\n        <Grid item xs={12} className={classes.center}>\n          <Typography variant=\"h4\">Secret Pass</Typography>\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            variant=\"outlined\"\n            size=\"small\"\n            type=\"password\"\n            value={password}\n            onChange={(evt) => setPasssword(evt.target.value)}\n          />\n        </Grid>\n        <Grid item xs={12}>\n          <TextField\n            fullWidth\n            aria-readonly\n            inputRef={ref}\n            variant=\"outlined\"\n            size=\"small\"\n            value={token}\n          />\n        </Grid>\n        <Grid item xs={12} className={classes.center}>\n          <Button\n            onClick={() => {\n              if (!ref.current) return\n              ref.current.select()\n              document.execCommand('copy')\n              setPasssword('')\n            }}\n          >\n            Copy\n          </Button>\n        </Grid>\n      </Grid>\n    </Page>\n  )\n}\n\nexport default withLayout(SecretPass, {\n  title: 'Secret Pass',\n  disableHeader: true,\n  theme: 'dark',\n})\n","import { Box, makeStyles } from '@material-ui/core'\nimport React from 'react'\n\nconst useStyles = makeStyles({\n  container: {\n    maxWidth: 960,\n    margin: 'auto',\n    width: '90%',\n    height: '100vh',\n  },\n})\n\nconst Page = ({ children }: React.PropsWithChildren<{}>) => {\n  const classes = useStyles()\n\n  return (\n    <Box className={classes.container}>\n      {children}\n    </Box>\n  )\n}\n\nexport default Page\n"],"sourceRoot":""}