{"version":3,"sources":["webpack://tools/./node_modules/@material-ui/core/esm/CircularProgress/CircularProgress.js","webpack://tools/./src/pages/jsonViewer.tsx"],"names":["SIZE","easeOut","t","value","min","max","Math","CircularProgress","props","ref","classes","className","_props$color","color","_props$disableShrink","disableShrink","_props$size","size","style","_props$thickness","thickness","_props$value","_props$variant","variant","other","circleStyle","rootStyle","rootProps","circumference","PI","strokeDasharray","toFixed","round","strokeDashoffset","concat","transform","root","indeterminate","static","width","height","role","svg","viewBox","circle","circleDisableShrink","circleIndeterminate","circleStatic","cx","cy","r","fill","strokeWidth","theme","display","transition","transitions","create","animation","colorPrimary","palette","primary","main","colorSecondary","secondary","stroke","name","flip","ReactJson","React","withLayout","json","setJSON","isValidJSON","JSON","parse","err","fullWidth","multiline","rows","label","onChange","evt","target","fallback","src","title"],"mappings":"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","file":"component---src-pages-json-viewer-tsx-25aea49b3e709ad09206.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport { chainPropTypes } from '@material-ui/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nvar SIZE = 44;\n\nfunction getRelativeValue(value, min, max) {\n  return (Math.min(Math.max(min, value), max) - min) / (max - min);\n}\n\nfunction easeOut(t) {\n  t = getRelativeValue(t, 0, 1); // https://gist.github.com/gre/1650294\n\n  t = (t -= 1) * t * t + 1;\n  return t;\n}\n\nfunction easeIn(t) {\n  return t * t;\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'inline-block'\n    },\n\n    /* Styles applied to the root element if `variant=\"static\"`. */\n    static: {\n      transition: theme.transitions.create('transform')\n    },\n\n    /* Styles applied to the root element if `variant=\"indeterminate\"`. */\n    indeterminate: {\n      animation: '$circular-rotate 1.4s linear infinite'\n    },\n\n    /* Styles applied to the root element if `color=\"primary\"`. */\n    colorPrimary: {\n      color: theme.palette.primary.main\n    },\n\n    /* Styles applied to the root element if `color=\"secondary\"`. */\n    colorSecondary: {\n      color: theme.palette.secondary.main\n    },\n\n    /* Styles applied to the `svg` element. */\n    svg: {\n      display: 'block' // Keeps the progress centered\n\n    },\n\n    /* Styles applied to the `circle` svg path. */\n    circle: {\n      stroke: 'currentColor' // Use butt to follow the specification, by chance, it's already the default CSS value.\n      // strokeLinecap: 'butt',\n\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"static\"`. */\n    circleStatic: {\n      transition: theme.transitions.create('stroke-dashoffset')\n    },\n\n    /* Styles applied to the `circle` svg path if `variant=\"indeterminate\"`. */\n    circleIndeterminate: {\n      animation: '$circular-dash 1.4s ease-in-out infinite',\n      // Some default value that looks fine waiting for the animation to kicks in.\n      strokeDasharray: '80px, 200px',\n      strokeDashoffset: '0px' // Add the unit to fix a Edge 16 and below bug.\n\n    },\n    '@keyframes circular-rotate': {\n      '100%': {\n        transform: 'rotate(360deg)'\n      }\n    },\n    '@keyframes circular-dash': {\n      '0%': {\n        strokeDasharray: '1px, 200px',\n        strokeDashoffset: '0px'\n      },\n      '50%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-15px'\n      },\n      '100%': {\n        strokeDasharray: '100px, 200px',\n        strokeDashoffset: '-125px'\n      }\n    },\n\n    /* Styles applied to the `circle` svg path if `disableShrink={true}`. */\n    circleDisableShrink: {\n      animation: 'none'\n    }\n  };\n};\n/**\n * ## ARIA\n *\n * If the progress bar is describing the loading progress of a particular region of a page,\n * you should use `aria-describedby` to point to the progress bar, and set the `aria-busy`\n * attribute to `true` on that region until it has finished loading.\n */\n\nvar CircularProgress = React.forwardRef(function CircularProgress(props, ref) {\n  var classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$disableShrink = props.disableShrink,\n      disableShrink = _props$disableShrink === void 0 ? false : _props$disableShrink,\n      _props$size = props.size,\n      size = _props$size === void 0 ? 40 : _props$size,\n      style = props.style,\n      _props$thickness = props.thickness,\n      thickness = _props$thickness === void 0 ? 3.6 : _props$thickness,\n      _props$value = props.value,\n      value = _props$value === void 0 ? 0 : _props$value,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'indeterminate' : _props$variant,\n      other = _objectWithoutProperties(props, [\"classes\", \"className\", \"color\", \"disableShrink\", \"size\", \"style\", \"thickness\", \"value\", \"variant\"]);\n\n  var circleStyle = {};\n  var rootStyle = {};\n  var rootProps = {};\n\n  if (variant === 'determinate' || variant === 'static') {\n    var circumference = 2 * Math.PI * ((SIZE - thickness) / 2);\n    circleStyle.strokeDasharray = circumference.toFixed(3);\n    rootProps['aria-valuenow'] = Math.round(value);\n\n    if (variant === 'static') {\n      circleStyle.strokeDashoffset = \"\".concat(((100 - value) / 100 * circumference).toFixed(3), \"px\");\n      rootStyle.transform = 'rotate(-90deg)';\n    } else {\n      circleStyle.strokeDashoffset = \"\".concat((easeIn((100 - value) / 100) * circumference).toFixed(3), \"px\");\n      rootStyle.transform = \"rotate(\".concat((easeOut(value / 70) * 270).toFixed(3), \"deg)\");\n    }\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    className: clsx(classes.root, className, color !== 'inherit' && classes[\"color\".concat(capitalize(color))], {\n      'indeterminate': classes.indeterminate,\n      'static': classes.static\n    }[variant]),\n    style: _extends({\n      width: size,\n      height: size\n    }, rootStyle, {}, style),\n    ref: ref,\n    role: \"progressbar\"\n  }, rootProps, other), /*#__PURE__*/React.createElement(\"svg\", {\n    className: classes.svg,\n    viewBox: \"\".concat(SIZE / 2, \" \").concat(SIZE / 2, \" \").concat(SIZE, \" \").concat(SIZE)\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    className: clsx(classes.circle, disableShrink && classes.circleDisableShrink, {\n      'indeterminate': classes.circleIndeterminate,\n      'static': classes.circleStatic\n    }[variant]),\n    style: circleStyle,\n    cx: SIZE,\n    cy: SIZE,\n    r: (SIZE - thickness) / 2,\n    fill: \"none\",\n    strokeWidth: thickness\n  })));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nexport default withStyles(styles, {\n  name: 'MuiCircularProgress',\n  flip: false\n})(CircularProgress);","import { CardContent, CircularProgress, TextField, Typography } from '@material-ui/core'\nimport React from 'react'\n\nimport { withLayout } from '../components/Layout/withLayout'\n\nconst ReactJson = React.lazy(() => import('react-json-view'))\n\nconst JSONViewer = () => {\n  const [json, setJSON] = React.useState('')\n\n  const isValidJSON = React.useMemo(() => {\n    try {\n      JSON.parse(json)\n      return true\n    } catch (err) {\n      return false\n    }\n  }, [json])\n\n  return (\n    <>\n      <TextField\n        fullWidth\n        multiline\n        rows={5}\n        label=\"Paste JSON here\"\n        variant=\"outlined\"\n        value={json}\n        onChange={(evt) => setJSON(evt.target.value)}\n      />\n      <CardContent>\n        {!isValidJSON && json && <Typography color=\"error\">Invalid JSON</Typography>}\n        {isValidJSON && (\n          <React.Suspense fallback={<CircularProgress color=\"secondary\" />}>\n            <ReactJson src={JSON.parse(json)} />\n          </React.Suspense>\n        )}\n      </CardContent>\n    </>\n  )\n}\n\nexport default withLayout(JSONViewer, {\n  title: 'JSON Viewer',\n})\n"],"sourceRoot":""}